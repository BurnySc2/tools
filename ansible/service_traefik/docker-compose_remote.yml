networks:
  "{{ secrets.TRAEFIK_NETWORK }}":
    external: true

services:
  traefik:
    image: "traefik:v3.2"
    container_name: "traefik"
    hostname: "traefik"
    restart: unless-stopped
    networks:
      - "{{ secrets.TRAEFIK_NETWORK }}"
    ports:
      # The HTTP port
      - 80:80
        # The HTTPS port
      - 443:443
        # The TCP port
      - 5432:5432
    command:
      - "--api.insecure=false"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--providers.docker.network={{ secrets.TRAEFIK_NETWORK }}"
      - "--entryPoints.web.address=:80"
      - "--entrypoints.web.http.redirections.entrypoint.to=websecure"
      - "--entrypoints.web.http.redirections.entrypoint.scheme=https"
      - "--entryPoints.websecure.address=:443"
      - "--entrypoints.pgsql.address=:5432"
      # Disable challenge while A-recosd is still pending to not spam letsencrypt
      - "--certificatesresolvers.production.acme.email={{ secrets.TRAEFIK.MY_EMAIL }}"
      - "--certificatesresolvers.production.acme.storage=/etc/traefik/acme.json"
      - "--certificatesresolvers.production.acme.httpchallenge.entrypoint=web"
    volumes:
      # Store ssl entries in acme.json
      - ./traefik:/etc/traefik
      - /var/run/docker.sock:/var/run/docker.sock:ro
    labels:
      - traefik.enable=true
      - traefik.http.routers.api.rule=Host(`{{ TRAEFIK_URL }}`)
      - traefik.http.routers.api.entryPoints=web,websecure
      - traefik.http.routers.api.tls=true
      - traefik.http.routers.api.tls.certresolver=production
      - traefik.http.routers.api.service=api@internal
      - traefik.http.services.api.loadbalancer.server.port={{ APPLICATION_PORT }}
