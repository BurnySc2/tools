# https://developers.cloudflare.com/cloudflare-one/connections/connect-networks/configure-tunnels/tunnel-run-parameters/
# https://developers.cloudflare.com/cloudflare-one/connections/connect-networks/configure-tunnels/local-management/configuration-file/
# Execute with
# ansible-playbook setup_cloudflared.yml -i ../hosts -i /home/burny/syncthing/secrets/ansible_secrets/.ansible_secrets
- name: Create service
  hosts: local_servers
  vars:
    USERNAME: cloudflared
  tasks:
    - name: Create group
      ansible.builtin.group:
        name: "{{ USERNAME }}"
        state: present

    - name: Create user
      ansible.builtin.user:
        name: "{{ USERNAME }}"
        groups:
          - "{{ USERNAME }}"
          - docker
        shell: "{{ secrets.DEFAULT_SHELL }}"

    - name: Create docker external network
      docker_network:
        name: "{{ secrets.TRAEFIK_NETWORK }}"
        internal: false
        attachable: true
        driver: bridge

    - name: Get tunnel
      ansible.builtin.uri:
        url: "https://api.cloudflare.com/client/v4/accounts/{{ secrets.CLOUDFLARE.ACCOUNT_ID }}/cfd_tunnel?name={{ CLOUDFLARE_TUNNEL_NAME }}"
        method: GET
        headers:
          Content-Type: application/json
          Authorization: "Bearer {{ secrets.CLOUDFLARE.TUNNEL_API_TOKEN }}"
        status_code: 200
      register: tunnel_response
      delegate_to: 127.0.0.1

    - name: Check tunnel exists
      ansible.builtin.assert:
        that: tunnel_response.json.result_info.count == 1
        fail_msg: "Tunnel has not been created. Create a tunnel with name: {{ CLOUDFLARE_TUNNEL_NAME }}"

    - name: Put tunnel configuration
      ansible.builtin.uri:
        url: "https://api.cloudflare.com/client/v4/accounts/{{ secrets.CLOUDFLARE.ACCOUNT_ID }}/cfd_tunnel/{{ tunnel_response.json.result[0].id }}/configurations"
        method: PUT
        headers:
          Content-Type: application/json
          Authorization: "Bearer {{ secrets.CLOUDFLARE.TUNNEL_API_TOKEN }}"
        body_format: json
        body:
          config:
            ingress:
              - hostname: traefik1.burnysc2.xyz
                service: http://traefik:8080
              - hostname: auth1.burnysc2.xyz
                service: https://traefik
                originRequest:
                  originServerName: auth1.burnysc2.xyz
                  noTLSVerify: true
                  http2Origin: true
              - hostname: sync1.burnysc2.xyz
                service: https://traefik
                originRequest:
                  originServerName: sync1.burnysc2.xyz
                  noTLSVerify: true
                  http2Origin: true
              - service: http_status:404
        status_code: 200
      when: "'server_group1' in group_names"
      delegate_to: 127.0.0.1

    - include_tasks: setup_cloudflared_create_cname.yml
      loop:
        - hostname: traefik1.burnysc2.xyz
        - hostname: auth1.burnysc2.xyz
        - hostname: sync1.burnysc2.xyz
      loop_control:
        loop_var: item
      when: "'server_group1' in group_names"

    - name: Put tunnel configuration
      ansible.builtin.uri:
        url: "https://api.cloudflare.com/client/v4/accounts/{{ secrets.CLOUDFLARE.ACCOUNT_ID }}/cfd_tunnel/{{ tunnel_response.json.result[0].id }}/configurations"
        method: PUT
        headers:
          Content-Type: application/json
          Authorization: "Bearer {{ secrets.CLOUDFLARE.TUNNEL_API_TOKEN }}"
        body_format: json
        body:
          config:
            ingress:
              - hostname: traefik2.burnysc2.xyz
                service: http://traefik:8080
              - hostname: auth2.burnysc2.xyz
                service: https://traefik
                originRequest:
                  originServerName: auth2.burnysc2.xyz
                  noTLSVerify: true
                  http2Origin: true
              - hostname: sync2.burnysc2.xyz
                service: https://traefik
                originRequest:
                  originServerName: sync2.burnysc2.xyz
                  noTLSVerify: true
                  http2Origin: true
              - hostname: "burnysc2.xyz"
                service: https://traefik
                originRequest:
                  originServerName: burnysc2.xyz
                  noTLSVerify: true
                  http2Origin: true
              - hostname: www.burnysc2.xyz
                service: https://traefik
                originRequest:
                  originServerName: www.burnysc2.xyz
                  noTLSVerify: true
                  http2Origin: true
              - hostname: apidev.burnysc2.xyz
                service: https://traefik
                originRequest:
                  originServerName: apidev.burnysc2.xyz
                  noTLSVerify: true
                  http2Origin: true
              - hostname: lissen.burnysc2.xyz
                service: https://traefik
                originRequest:
                  originServerName: lissen.burnysc2.xyz
                  noTLSVerify: true
                  http2Origin: true
              - service: http_status:404
        status_code: 200
      when: "'server_group2' in group_names"
      delegate_to: 127.0.0.1

    - include_tasks: setup_cloudflared_create_cname.yml
      loop:
        - hostname: traefik2.burnysc2.xyz
        - hostname: auth2.burnysc2.xyz
        - hostname: sync2.burnysc2.xyz
        - hostname: burnysc2.xyz
        - hostname: www.burnysc2.xyz
        - hostname: apidev.burnysc2.xyz
        - hostname: lissen.burnysc2.xyz
      loop_control:
        loop_var: item
      when: "'server_group2' in group_names"

    - name: Copy docker-compose.yml file
      template:
        src: docker-compose.yml
        dest: /home/{{ USERNAME }}/docker-compose.yml

    - name: Run `docker-compose up` again
      community.docker.docker_compose_v2:
        project_src: /home/{{ USERNAME }}
