[project]
name = "src"
version = "0.1.0"
requires-python = ">=3.10, <3.14"
dependencies = [
    "aiocontextvars>=0.2.2",
    "aiofile>=3.9.0",
    "aiohttp>=3.11.7",
    "alembic>=1.14.0",
    "beanie>=1.27.0",
    "bokeh>=3.6.1",
    "burny-common>=0.0.13",
    "click>=8.1.7",
    "dataclasses-json>=0.6.7",
    "dataset>=1.6.2",
    "dpath>=2.2.0",
    "idna-ssl>=1.1.0",
    "loguru>=0.7.2",
    "lorem-text>=2.1",
    "matplotlib>=3.9.2",
    "mongoengine>=0.29.1",
    "moviepy<2.0.0",
    "numpy>=2.1.3",
    "pandas>=2.2.3",
    "paramiko>=2.12.0",
    "peewee>=3.17.8",
    "pendulum>=3.0.0",
    "pillow>=10.4.0",
    "pony>=0.7.19",
    "prisma>=0.15.0",
    "psutil>=5.9.8",
    "psycopg[binary]>=3.2.3",
    "pydantic[email]>=1.10.19",
    "pymongo>=4.10.1",
    "python-dotenv>=1.0.1",
    "requests>=2.32.3",
    "seaborn>=0.13.2",
    "shapely>=2.0.6",
    "sqlalchemy>=1.4.54",
    "sqlmodel>=0.0.11",
    "tinydb>=4.8.2",
    "watchgod>=0.8.2",
]

[tool.uv]
dev-dependencies = [
    "hypothesis>=6.119.4",
    "pyre-check>=0.9.21",
    "pytest>=8.3.3",
    "pytest-asyncio>=0.24.0",
    "pytest-benchmark>=5.1.0",
    "pytest-cov>=6.0.0",
    "ruff>=0.8.0",
    "snakeviz>=2.2.2",
    "toml>=0.10.2",
    "scalene>=1.5.42.2",
    "radon>=6.0.1",
]

[tool.yapf]
based_on_style = "pep8"
column_limit = 120
split_arguments_when_comma_terminated = true
dedent_closing_brackets = true
allow_split_before_dict_value = false

[tool.ruff]
target-version = 'py310'
line-length = 120

[tool.ruff.lint]
# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"
select = [
    "C4",  # flake8-comprehensions
    "E",   # Error
    "F",   # pyflakes
    "BLE", # flake8-blind-except
    # "I",   # isort
    "N",   # pep8-naming
    "PGH", # pygrep-hooks
    "PTH", # flake8-use-pathlib
    "SIM", # flake8-simplify
    "W",   # Warning
    "Q",   # flake8-quotes
    "YTT", # flake8-2020
    "UP",  # pyupgrade
    #    "A",  # flake8-builtins
]
# Allow Pydantic's `@validator` decorator to trigger class method treatment.
pep8-naming.classmethod-decorators = ["pydantic.validator", "classmethod"]
