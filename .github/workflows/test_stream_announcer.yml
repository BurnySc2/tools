name: test_stream_announcer

on:
  push:
    paths:
      - twitch_stream_announcer/**
      - .github/workflows/test_stream_announcer.yml
  pull_request:
    branches:
      - develop

env:
  SUBDIRECTORY: twitch_stream_announcer
  DOCKER_IMAGE_NAME: burnysc2/twitch_stream_announcer
  DOCKER_IMAGE_VERSION: 1.0.0

jobs:
  test_stream_announcer:
    name: test_stream_announcer_nim-${{ matrix.nim-version }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        nim-version: ["2.2.0-alpine", "2.2.0-ubuntu"]
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v4

        # https://earthly.dev/get-earthly
      - name: Install Earthly
        run: sudo /bin/sh -c 'wget https://github.com/earthly/earthly/releases/latest/download/earthly-linux-amd64 -O /usr/local/bin/earthly && chmod +x /usr/local/bin/earthly && /usr/local/bin/earthly bootstrap --with-autocomplete'

      - name: Install
        working-directory: ${{ env.SUBDIRECTORY }}
        run: |
          earthly +setup --verbose true --NIMVERSION=${{ matrix.nim-version }}

      - name: Compile
        working-directory: ${{ env.SUBDIRECTORY }}
        run: |
          earthly +compile --verbose true --NIMVERSION=${{ matrix.nim-version }}

  build_and_deploy_docker_image:
    name: Build and deploy docker image
    needs: [test_stream_announcer]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Build docker image
        working-directory: ${{ env.SUBDIRECTORY }}
        run: docker build -t "$DOCKER_IMAGE_NAME:local" .

      # Cert error https://github.com/kitabisa/docker-slim-action/issues/15
      # - uses: kitabisa/docker-slim-action@v1
      #   env:
      #     DSLIM_HTTP_PROBE: false
      #     DSLIM_HOST_EXEC: "/root/tsa/main"
      #     STAGE: BUILD
      #   with:
      #     target: $DOCKER_IMAGE_NAME:local
      #     tag: $DOCKER_IMAGE_NAME:latest

      - name: Slim the Docker imageðŸš€
        run: |
          curl -L -o ds.tar.gz https://github.com/slimtoolkit/slim/releases/download/1.40.11/dist_linux.tar.gz
          tar -xvf ds.tar.gz
          ./dist_linux/slim build --target $DOCKER_IMAGE_NAME:local --tag $DOCKER_IMAGE_NAME:latest --http-probe=false --env STAGE=BUILD --exec "/root/tsa/main"

      - name: Create tag ${{ env.DOCKER_IMAGE_VERSION }}
        run: docker tag $DOCKER_IMAGE_NAME:latest $DOCKER_IMAGE_NAME:$DOCKER_IMAGE_VERSION

      - name: Debug prind images
        run: docker images

      - name: Login to DockerHub
        if: github.ref == 'refs/heads/develop' && github.event_name == 'push'
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Upload docker image
        if: github.ref == 'refs/heads/develop' && github.event_name == 'push'
        run: |
          docker push $DOCKER_IMAGE_NAME:$DOCKER_IMAGE_VERSION
          docker push $DOCKER_IMAGE_NAME:latest
