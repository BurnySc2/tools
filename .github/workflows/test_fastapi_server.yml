name: test_fastapi_server


on:
  push:
    paths:
    - fastapi_server/**
    - .github/workflows/test_fastapi_server.yml
  pull_request:
    branches:
    - master
    - develop

env:
  SUBDIRECTORY: fastapi_server

jobs:
  run_pre_commit_checks:
    name: pre_commit_check_py${{ matrix.python-version }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        python-version: ['3.10', '3.11', '3.12']
    runs-on: ${{ matrix.os }}
    timeout-minutes: 5

    steps:
    - uses: actions/checkout@v4

    # https://earthly.dev/get-earthly
    - name: Install Earthly
      run: sudo /bin/sh -c 'wget https://github.com/earthly/earthly/releases/latest/download/earthly-linux-amd64 -O /usr/local/bin/earthly && chmod +x /usr/local/bin/earthly && /usr/local/bin/earthly bootstrap --with-autocomplete'

    - name: Install
      working-directory: ${{ env.SUBDIRECTORY }}
      run: earthly +install-dev --verbose true --PYTHONVERSION=${{ matrix.python-version }}

    - name: Run code checks
      working-directory: ${{ env.SUBDIRECTORY }}
      run: earthly +pre-commit --verbose true --PYTHONVERSION=${{ matrix.python-version }}

  test_backend:
    name: test_backend_py${{ matrix.python-version }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        python-version: ['3.10', '3.11', '3.12']
    runs-on: ${{ matrix.os }}
    timeout-minutes: 5

    steps:
    - uses: actions/checkout@v4

    - name: Set up postgres and minio test instances
      working-directory: ${{ env.SUBDIRECTORY }}
      run: |
        docker compose --profile test up -d

    - name: Set up npm for prisma
      uses: actions/setup-node@v4
      with:
        node-version: 18
      
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install poetry
      run: pip install poetry --no-cache-dir poetry==1.8

    - name: Make poetry use local .venv folder
      run: poetry config virtualenvs.in-project true

    - name: Install packages
      working-directory: ${{ env.SUBDIRECTORY }}
      run: poetry install

    - name: Generate prisma types
      working-directory: ${{ env.SUBDIRECTORY }}
      run: poetry run prisma generate

    - name: Run pytest
      working-directory: ${{ env.SUBDIRECTORY }}
      run: poetry run python -m pytest test --random-order
